10.1.1.64.5265	2002	Fetching instruction streams
R1	10.1.1.18.7813	Basic Block Distribution Analysis to Find Periodic Behavior and Simulation Points in Applications
R1	10.1.1.140.2177	Trace Cache: a Low Latency Approach to High Bandwidth Instruction Fetching
R1	10.1.1.114.1258	The microarchitecture of the pentium 4 processor
R1	10.1.1.2.3724	Procedure Placement Using Temporal Ordering Information
R1	10.1.1.150.2162	Path-based next trace prediction
R1	10.1.1.42.629	A Hardware-Driven Profiling Scheme for Identifying Program Hot Spots to Support Runtime Optimization
R1	10.1.1.30.9975	Optimization of Instruction Fetch Mechanisms for High Issue Rates
R1	10.1.1.38.3723	Multiple-Block Ahead Branch Predictors
R1	10.1.1.38.8742	Increasing the Instruction Fetch Rate via Multiple Branch Prediction and a Branch Address Cache
R1	10.1.1.12.7138	Dynamo: A Transparent Dynamic Optimization System
R1	10.1.1.27.1798	Next Cache Line and Set Prediction
R1	10.1.1.18.4387	Efficient Procedure Mapping using Cache Line Coloring
R1	10.1.1.100.6467	Code Layout Optimizations for Transaction Processing Workloads
R1	10.1.1.114.8209	Optimizing Instruction Cache Performance for Operating System Intensive Workloads
R1	10.1.1.133.9683	Dynamic Branch Prediction with Perceptrons
R1	10.1.1.157.8232	Putting the fill unit to work: Dynamic optimizations for trace cache microprocessors
R1	10.1.1.46.2300	Trace cache redundancy: Red Blue traces
R1	10.1.1.127.9175	A Trace Cache Microarchitecture and Evaluation
R1	10.1.1.152.277	Increasing the size of atomic instruction blocks using control flow assertions
R1	10.1.1.34.6014	Improving Trace Cache Effectiveness with Branch Promotion and Trace Packing
R1	10.1.1.27.2119	A Scalable Front-End Architecture for Fast Instruction Delivery
R1	10.1.1.65.2910	The effect of code reordering on branch prediction
R1	10.1.1.27.7137	Reducing Branch Costs via Branch Alignment
